1.基于Java语言，对比“==”操作符和equals()方法。
	(1)对于基本数据类型，只能使用“==”。
	(2)对于引用数据类型
		* 使用“==”操作符是比较引用变量所指向的对象的地址
		* equals()方法是类的方法，在Object类中，equals()方法与“==”操作符比较的是一样的;但是自定义类可以重载equals()方法。
	(3)解释代码：自定义类包含一个基本数据类型int，在Attr类中直接继承Object类的equals()方法；而在Clone类，重载equals()方法，自定义比较规则，通过比较Clone类中的属性使用全相等来决定equals()方法的返回值。
2.基于Java语言，实现自定义类的浅克隆，深克隆，完全克隆。
	(1)浅克隆：返回指向旧对象的新引用变量。
	(2)深克隆：返回指向与原来的对象属性的值全相等的新对象的新引用变量。如果自定义类的属性中有引用变量类型，新对象的引用属性的指向与旧对象的的该引用属性是一样的，即引用属性指向的对象地址是相同的。
	(3)完全克隆
		* 对于自定义类属性全是基本数据类型时，完全克隆和深克隆是一样的。
		* 对于自定义类属性中有引用变量类型时，完全克隆返回的新对象的引用属性指向与旧对象的该引用属性的对象属性值全相等的新对象。即引用属性指向的对象地址是不同的。
	(4)解释代码：自定义一个包含基本数据类型int和引用变量类型Attr的类Clone，通过观察引用变量所指向的对象的地址来验证这三个克隆的异同点。
	